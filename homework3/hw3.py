# 1) Напишите программу, в которой описывается класс со следующими характеристиками.
# У класса есть конструктор, которому (кроме ссылки на объект вызова) передаются два значения. 
# Эти значения присваиваются полям объекта класса. 
# В классе должен быть описан метод, при вызове которого отображаются значения полей класса. 
# Проверьте функциональность класса, создав на его основе несколько объектов.


class First:
    def __init__(self, city, weather):
        self.city = city
        self.weather = weather

    def inf(self):
        print(f"City: {self.city}, weather: {self.weather}")


first1 = First("Minsk", 23)
first2 = First("London", 18)
first3 = First("Tokyo", 30)

first1.inf()
first2.inf()
first3.inf()


# 2) Напишите программу, в которой описан класс со следующими свойствами.
# В классе описан конструктор, которому в качестве аргументов (помимо первой ссылки на создаваемый объект) 
# передаются текст и целое число, причем в произвольном порядке.
# Число и текст присваиваются как значения определенным полям. 
# Если переданы два текстовых значения, то создается только текстовое поле со значением, 
# получающимся объединением значений аргументов. Если аргументами переданы два числовых поля, 
# то у объекта будет только поле с целочисленным значением, равным сумме значений аргументов. 
# В иных случаях поля для объекта не создаются. Создать на основе класса объекты и прове-
# рить функциональность кода. 


class Second:

    def __init__(self, *args):
        if len(args)!=2:
            print("Нужно 2 аргумента!!")
            return
        
        a, b=args
        if isinstance(a, str) and isinstance(b, str):
            self.text=a+b
        elif isinstance(a, int) and isinstance(b, int):
            self.number=a+b

    def show(self):
        if hasattr(self, "text"):
            print(f"Text: {self.text}")
        elif hasattr(self, "number"):
            print(f"Number: {self.number}")
        else:
            print("Поля не были созданы")


sec1=Second("Hello", " world")
sec2=Second(3 , "world")
sec3=Second(5, 6)

sec1.show()
sec2.show()
sec3.show()


# 3) Напишите программу, в которой описан класс. У объектов класса должно быть поле, представляющее собой числовой список.
# Этот список формируется на основе списка, переданного конструктору в качестве аргумента. 
# При этом из списка-аргумента в список-поле включаются только числовые элементы (элементы других типов игнорируются). 
# Необходимо также описать метод, отображающий содержимое поля списка, а также метод, 
# вычисляющий среднее значение элементов поля списка (сумма значений элементов, деленная на их количество).


class Third:

    def __init__(self, *args):
        self.num=[x for x in args if isinstance(x,(int, float))]

    def show(self):
        print(self.num)

    def avg(self):
        if self.num:
            avg=sum(self.num)/len(self.num)
            print("Среднее значение:", avg)
        else:
            print("Список пуст")

third1=Third(1,2,3,4,5,"Hi", 45.2, "world")
third1.show()
third1.avg()

        



    
        
    
